<?php

/**
 * @file
 * Rules Web Hooks Test Module.
 */

/**
 * Implements hook_default_rules_web_hook().
 */
function rules_web_hooks_test_default_rules_web_hook() {
  $hook = new EntityDB(array(), 'rules_web_hook');
  $hook->name = 'test';
  $hook->label = 'A test hook.';
  $hook->active = TRUE;
  $hook->variables = array(
    'node' => array(
      'type' => 'node',
      'label' => 'Content',
    ),
  );
  $hooks[$hook->name] = $hook;
  return $hooks;
}

/**
 * Implements hook_default_wsclient_service().
 */
function rules_web_hooks_test_default_wsclient_service() {
  $service = new WSClientServiceDescription();
  $service->name = 'self';
  $service->label = 'The local drupal site.';
  $service->url = $GLOBALS['base_url'];
  $service->type = 'rules_web_hook';
  if (!empty($GLOBALS['RulesWebHooksTest']) && $test = $GLOBALS['RulesWebHooksTest']) {
    // Make the remote work with the test environment.
    $test->remoteAddCurlOptions($service);
  }
  $services[$service->name] = $service;
  return $services;
}

/**
 * Injects entity types into entity info. This is needed to workaround not
 * being able to use hook_entity_info().
 *
 * @see wsclient_entity_info_alter()
 */

function rules_web_hooks_test_inject_entity_types($service) {
  global $language;
  // Be sure info is initialized.
  entity_get_info();
  $info = &drupal_static('entity_get_info');

  // Add our info
  $name = $service->name;
  foreach ($service->entities() as $type => $type_info) {
    // Don't add in entity types, that stem from another site.
    if (strpos($type, 'wsclient_') !== 0) {
      $info['wsclient_' . $name . '_' . $type] = $type_info + array(
        'controller class' => 'WSClientServiceEntityController',
        'wsclient' => array(
          'remote' => $name,
          'type' => $type,
        ),
        'fieldable' => FALSE,
        'revision table' => FALSE,
      );
      // Apply defaults as entity_get_info().
      $info['wsclient_' . $name . '_' . $type] += array(
        'static cache' => TRUE,
        'load hook' => 'wsclient_' . $name . '_' . $type . '_load',
        'bundles' => array(),
        'view modes' => array(),
        'entity keys' => array(),
        'cacheable' => TRUE,
        'translation' => array(),
      );
    }
  }
  $langcode = $language->language;
  cache_set("entity_info:$langcode", $info);
}
